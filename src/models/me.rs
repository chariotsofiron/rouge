use reqwest::Method;
use serde::{Deserialize, Serialize};

use crate::Request;

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
pub struct Features {
    pub mod_service_mute_writes: bool,
    pub promoted_trend_blanks: bool,
    pub show_amp_link: bool,
    // pub top_content_email_digest_v2: TopContentEmailDigestV2,
    pub is_email_permission_required: bool,
    pub mod_awards: bool,
    pub expensive_coins_package: bool,
    // pub mweb_xpromo_revamp_v2: MwebXpromoRevampV2,
    pub awards_on_streams: bool,
    pub mweb_xpromo_modal_listing_click_daily_dismissible_ios: bool,
    pub chat_subreddit: bool,
    pub cookie_consent_banner: bool,
    pub modlog_copyright_removal: bool,
    pub show_nps_survey: bool,
    pub do_not_track: bool,
    pub mod_service_mute_reads: bool,
    pub chat_user_settings: bool,
    pub use_pref_account_deployment: bool,
    pub mweb_xpromo_interstitial_comments_ios: bool,
    pub mweb_xpromo_modal_listing_click_daily_dismissible_android: bool,
    pub premium_subscriptions_table: bool,
    pub mweb_xpromo_interstitial_comments_android: bool,
    pub crowd_control_for_post: bool,
    pub noreferrer_to_noopener: bool,
    pub chat_group_rollout: bool,
    pub resized_styles_images: bool,
    pub spez_modal: bool,
    // pub mweb_sharing_clipboard: MwebSharingClipboard,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
pub struct Subreddit {
    pub default_set: bool,
    pub user_is_contributor: bool,
    pub banner_img: String,
    pub restrict_posting: bool,
    pub user_is_banned: bool,
    pub free_form_reports: bool,
    pub community_icon: Option<String>,
    pub show_media: bool,
    pub icon_color: String,
    pub user_is_muted: bool,
    pub display_name: String,
    pub header_img: Option<String>,
    pub title: String,
    pub coins: u64,
    pub previous_names: Vec<String>,
    pub over_18: bool,
    pub icon_size: Vec<u64>,
    pub primary_color: String,
    pub icon_img: String,
    pub description: String,
    pub submit_link_label: String,
    pub header_size: Option<String>,
    pub restrict_commenting: bool,
    pub subscribers: u64,
    pub submit_text_label: String,
    pub is_default_icon: bool,
    pub link_flair_position: String,
    pub display_name_prefixed: String,
    pub key_color: String,
    pub name: String,
    pub is_default_banner: bool,
    pub url: String,
    pub quarantine: bool,
    pub banner_size: Option<u64>,
    pub user_is_moderator: bool,
    pub accept_followers: bool,
    pub public_description: String,
    pub link_flair_enabled: bool,
    pub disable_contributor_requests: bool,
    pub subreddit_type: String,
    pub user_is_subscriber: bool,
}

/// MeData
#[derive(Debug, Deserialize)]
pub struct MeResponse {
    pub is_employee: bool,
    pub seen_layout_switch: bool,
    pub has_visited_new_profile: bool,
    pub pref_no_profanity: bool,
    pub has_external_account: bool,
    pub pref_geopopular: String,
    pub seen_redesign_modal: bool,
    pub pref_show_trending: bool,
    pub subreddit: Subreddit,
    pub pref_show_presence: bool,
    pub snoovatar_img: String,
    pub snoovatar_size: Option<String>,
    pub gold_expiration: Option<String>,
    pub has_gold_subscription: bool,
    pub is_sponsor: bool,
    pub num_friends: u64,
    pub features: Features,
    pub can_edit_name: bool,
    pub verified: bool,
    pub new_modmail_exists: Option<String>,
    pub pref_autoplay: bool,
    pub coins: u64,
    pub has_paypal_subscription: bool,
    pub has_subscribed_to_premium: bool,
    pub id: String,
    pub has_stripe_subscription: bool,
    pub oauth_client_id: String,
    pub can_create_subreddit: bool,
    pub over_18: bool,
    pub is_gold: bool,
    pub is_mod: bool,
    pub awarder_karma: u64,
    pub suspension_expiration_utc: Option<String>,
    pub has_verified_email: bool,
    pub is_suspended: bool,
    pub pref_video_autoplay: bool,
    pub has_android_subscription: bool,
    pub in_redesign_beta: bool,
    pub icon_img: String,
    pub has_mod_mail: bool,
    pub pref_nightmode: bool,
    pub awardee_karma: u64,
    pub hide_from_robots: bool,
    pub password_set: bool,
    pub link_karma: u64,
    pub force_password_reset: bool,
    pub total_karma: u64,
    pub seen_give_award_tooltip: bool,
    pub inbox_count: u64,
    pub seen_premium_adblock_modal: bool,
    pub pref_top_karma_subreddits: bool,
    pub has_mail: bool,
    pub pref_show_snoovatar: bool,
    pub name: String,
    pub pref_clickgadget: u64,
    pub created: f64,
    /// Typo in the API
    pub gold_creddits: u64,
    pub created_utc: f64,
    pub has_ios_subscription: bool,
    pub pref_show_twitter: bool,
    pub in_beta: bool,
    pub comment_karma: u64,
    pub accept_followers: bool,
    pub has_subscribed: bool,
    pub linked_identities: Vec<String>,
    pub seen_subreddit_chat_ftux: bool,
}

#[derive(Serialize)]
pub struct Me;

impl Request for Me {
    const METHOD: Method = Method::GET;
    const PATH: &'static str = "/api/v1/me";
    const REQUIRES_USER: bool = true;

    type Response = MeResponse;
}
